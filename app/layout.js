"use client";
import { Inter } from "next/font/google";
import "./globals.css";
import NavBar from "@/components/views/layout/NavBar";
import SideBar from "@/components/views/layout/SideBar";
import { Toaster } from "@/components/ui/sonner";

import { useEffect, useState } from "react";
import Database from "tauri-plugin-sql-api";

const inter = Inter({ subsets: ["latin"] });
import { ThemeProvider } from "@/components/theme-provider";
import useThemeStore from "@/components/themeStore";

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  const [timer, setTimer] = useState(2700)
  var { theme, setGlobalTheme } = useThemeStore();

  async function insert(today) {
    try {
      const db = await Database.load("sqlite:data.db");
      const result = await db.execute(
        "CREATE TABLE IF NOT EXISTS appconfig (id INTEGER PRIMARY KEY, start_date TEXT NOT NULL, theme TEXT NOT NULL, timer_in_sec INTEGER NOT NULL)"
      );
      const select = await db.select("SELECT COUNT(*) AS COUNT FROM appconfig");
      if (select[0].COUNT == 0) {
        const insert = await db.execute(
          "INSERT OR REPLACE INTO appconfig (id, start_date, theme) VALUES (1, ?, ?, ?)",
          [today, "light", 2700]
        );
      }
      const timer_data = await db.select("SELECT timer_in_sec FROM appconfig");
      setTimer(timer_data)
    } catch (error) {
      console.log("error : ", error);
    }
  }

  useEffect(() => {
    const now = new Date();
    const year = now.getFullYear();
    const month = String(now.getMonth() + 1).padStart(2, "0");
    const day = String(now.getDate()).padStart(2, "0");

    const today = `${year}-${month}-${day}`;
    insert(today);

    const theme = localStorage.getItem("theme");
    if (!theme) {
      const root = document.documentElement;
      root.className = "";
      root.classList.add("light");
      localStorage.setItem("theme", "light");
    } else {
      const root = document.documentElement;
      root.className = "";
      root.classList.add(theme);
      setGlobalTheme(theme)
    }
  }, []);

  const expiryTimestamp = new Date();
  expiryTimestamp.setSeconds(expiryTimestamp.getSeconds() + timer); // 10 minutes timer

  return (
    <html lang="en" suppressHydrationWarning>
      <body className="flex flex-col h-screen w-screen">
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          disableTransitionOnChange
          enableSystem
        >
          <NavBar expiryTimestamp={expiryTimestamp} />
          <div className="flex flex-1 overflow-hidden">
            <SideBar />
            <main className={inter.className + " grow overflow-y-auto"}>
              {children}
            </main>
          </div>
          <Toaster />
        </ThemeProvider>
      </body>
    </html>
  );
}
